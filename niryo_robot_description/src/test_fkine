#!/usr/bin/env python3
import rospy
from sensor_msgs.msg import JointState

from markers import * 
from lab3functions import *
rospy.init_node("testForwardKinematics")
pub = rospy.Publisher('joint_states', JointState, queue_size=1000)
bmarker = BallMarker(color['GREEN'])
# Joint names
jnames = ['joint_1', 'joint_2',
          'joint_3','joint_4','joint_5', 'joint_6']
# Joint Configuration
q = [2, 1, 0.8, 0.5, 0, 0]  # Posicion Modificada

# End effector with respect to the base
T = fkine_niryo(q)

print(np.round(T, 3))
bmarker.position(T)
# Object (message) whose type is JointState
jstate = JointState()
# Set values to the message
jstate.header.stamp = rospy.Time.now()
jstate.name = jnames
# Add the head joint value (with value 0) to the joints
jstate.position = q
# Loop rate (in Hz)

rate = rospy.Rate(10)
# Continuous execution loop
while not rospy.is_shutdown(): 
    
    # Current time (needed for ROS)
    jstate.header.stamp = rospy.Time.now()
    # Publish the message
    pub.publish(jstate)
    bmarker.publish()
    # Wait for the next iteration
    rate.sleep()